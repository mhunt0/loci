
$type pos store<Loci::vector3d<Loci::real_t> > ;
$type cl Map ;
$type cr Map ;
$type ci Map ;
$type ref Map ;
$type pmap Map ;
$type face2node multiMap ;

$type upper multiMap ;
$type lower multiMap ;
$type boundary_map multiMap ;

$type cellcenter store<Loci::vector3d<Loci::real_t> > ;
$type facecenter store<Loci::vector3d<Loci::real_t> > ;
$type area store<Loci::Area> ;
$type vol store<Loci::real_t> ;
$type grid_vol param<Loci::real_t> ;

$type at store<Loci::real_t> ;
$type mn store<Loci::vector3d<Loci::real_t> > ;
$type ln store<Loci::vector3d<Loci::real_t> > ;

$type grads(Y) store<Loci::vector3d<Loci::real_t> > ;
$type gradv(Y) storeVec<Loci::vector3d<Loci::real_t> > ;
$type gradv3d(Y) store<Loci::tensor3d<Loci::real_t> > ;

$type grads_f(Y) store<Loci::vector3d<Loci::real_t> > ;
$type gradv_f(Y) storeVec<Loci::vector3d<Loci::real_t> > ;
$type gradv3d_f(Y) store<Loci::tensor3d<Loci::real_t> > ;

$type limiters(X) store<Loci::real_t> ;
$type limiterv(X) storeVec<Loci::real_t> ;
$type limiterv3d(X) store<Loci::vector3d<Loci::real_t> > ;

$type lefts(X) store<Loci::real_t> ;
$type rights(X) store<Loci::real_t> ;
$type leftsP(X,M) store<Loci::real_t> ;
$type rightsP(X,M) store<Loci::real_t> ;
$type leftvM(X) storeVec<Loci::real_t> ;
$type rightvM(X) storeVec<Loci::real_t> ;
$type leftv3d(X) store<Loci::vector3d<Loci::real_t> > ;
$type rightv3d(X) store<Loci::vector3d<Loci::real_t> > ;

$type cell2node(X) store<float > ;
$type cell2node_v(X) storeVec<float > ;
$type cell2node_v3d(X) store<Loci::vector3d<float> > ;
$type cell2nodeMax(X) store<float > ;
$type cell2nodeMin(X) store<float > ;
$type cell2nodeMaxMag(X) store<float > ;
$type cell2nodeMaxv3d(X) store<vector3d<float> > ;

$type BC_options store<Loci::options_list> ;

$type integrateSurface(X) store<Loci::real_t> ;

$type petscScalarSolve(X) store<Loci::real_t> ;
