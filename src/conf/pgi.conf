# C++ Compiler
ifeq ($(MPI_CPP_COMPILER),none)
CPP = pgCC
else
CPP = $(MPI_CPP_COMPILER)
endif
# C Compiler
ifeq ($(MPI_C_COMPILER),none)
CC = pgcc
else
CC  = $(MPI_C_COMPILER)
endif
# Fortran90 compiler
ifeq (($MPI_F90_COMPILER),none)
F90 = pgf90
else
F90 = mpif90
endif

LDBSL = pgCC

# Dependency Compiler
MAKEDEPEND = $(CPP) -M

DEBUG   = #-DDEBUG -DBOUNDS_CHECK 

SYSTEM_DEFINES = 


#Compiler option used to include debugging information
CC_DEBUG = #-g

ARCH_FLAGS_i686 =  #-fastsse 
ARCH_FLAGS_x86_64 = #-fastsse -Mvect=assoc -Mvect=sse -Mfprelaxed
#Compiler option used to perform maximum optimization
CC_OPTIMIZE = -O3 -fast $(ARCH_FLAGS_$(ARCH_TYPE))
#Compiler Option for reasonable compile times of less performace critical modules.
CC_OPTIMIZE_LOWER = -O1 
EXCEPTIONS = 
CC_OPT1   = $(EXCEPTIONS) $(CC_OPTIMIZE_LOWER)
CC_OPT    = $(EXCEPTIONS) $(CC_OPTIMIZE) 
CC_LIB_FLAGS = $(EXCEPTIONS)

#Optimizer flags for the C compiler
C_OPT = $(CC_OPTIMIZE)
#Optimizer flags for f90 compiler
F_OPT = $(CC_OPTIMIZE) 

LD       = $(CPP)
LDFLAGS  = $(CC_OPT) #-rdynamic

RPATH = -Wl,-rpath,

AR        = ar
ARFLAGS   = crv
RANLIB    = ranlib

PIC_FLAGS = -fPIC
SHARED_LD = $(CPP) -shared
SHARED_LD_FLAGS = -o 
DYNAMIC_LD = $(CPP) -shared
DYNAMIC_LD_FLAGS = -o 
