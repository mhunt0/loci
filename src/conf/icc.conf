# C++ Compiler
ifeq ($(MPI_CPP_COMPILER),none)
CPP = icc -wd654 -Kc++ 
else
CPP = $(MPI_CPP_COMPILER) -cxx=icc -wd654
endif
# C Compiler
ifeq ($(MPI_C_COMPILER),none)
CC = icc 
else
CC  = $(MPI_C_COMPILER) -cc=icc
endif
# Fortran90 compiler
ifeq ($(MPI_F90_COMPILER),none)
F90 = ifort
else
F90 = mpif90
endif

LDBSL = icc -wd654 -Kc++ 

# Dependency Compiler
MAKEDEPEND = $(CPP) -M

# Turn ON/Off extra debugging error checking (usually off for optimized code)
# Also turn on array bounds checking (really slows things down)
# -DENTITY turns on type distinction between entity and integer.
DEBUG   = #-DDEBUG -DBOUNDS_CHECK 

SYSTEM_DEFINES = 


#Compiler option used to include debugging information
CC_DEBUG = #-g

#pentium 4 specialized optimization flags
ARCH_FLAGS_i686 = -xN -axN
#Westmere or SandyBridge nodes
ARCH_FLAGS_x86_64 =  -axAVX -xSSE4.1
#Compiler option used to perform maximum optimization
CC_OPTIMIZE = -O3 -restrict -no-prec-div -inline-factor=150 -diag-disable cpu-dispatch -ansi_alias -ip $(ARCH_FLAGS_$(ARCH_TYPE))
#Compiler Option for reasonable compile times of less performace critical modules.
CC_OPTIMIZE_LOWER = -O1 -ansi_alias -fp-model precise
EXCEPTIONS = 
CC_OPT1   = $(EXCEPTIONS) $(CC_OPTIMIZE_LOWER)
CC_OPT    = $(EXCEPTIONS) $(CC_OPTIMIZE) 
CC_LIB_FLAGS = $(EXCEPTIONS)

#Optimizer flags for the C compiler
C_OPT = $(CC_OPTIMIZE)
#Optimizer flags for f90 compiler
F_OPT = $(CC_OPTIMIZE) 

LD       = $(CPP) 
LDFLAGS  =  -rdynamic 
RPATH    = -Wl,-rpath,

AR        = ar
ARFLAGS   = crv
RANLIB    = ranlib

PIC_FLAGS = -fPIC
SHARED_LD = $(CPP) -shared
SHARED_LD_FLAGS = -o 
DYNAMIC_LD = $(CPP) -shared
DYNAMIC_LD_FLAGS = -o 
