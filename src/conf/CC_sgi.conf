CPP = CC -LANG:std -DNO_CSTDLIB -DNO_CMATH -n32 -mips4 -mp #-show
MAKEDEPEND = $(CPP) -M


DEBUG   = #-DPTHREADS -DDEBUG -DBOUNDS_CHECK
CC_DEBUG = -g -TENV:large_got=ON
CC_OPTIMIZE = #-O2 -OPT:Olimit=0

EXCEPTIONS = 
CC_OPT1   = $(EXCEPTIONS) #-O1 -OPT:Olimit=0
CC_OPT    = $(EXCEPTIONS) $(CC_OPTIMIZE)
CC_LIB_FLAGS = $(EXCEPTIONS) 

LD       = $(CPP) -J 6 #-Wl,-LD_MSG:off=15,-LD_MSG:off=171
LDFLAGS  = $(EXCEPTIONS) -lpthread -Wl,-LD_LAYOUT:lgot_buffer=20 #-v -Wl,-wall,-v,-LD_LAYOUT:lgot_buffer=20 -Wl,-v
RLD_PATH_OPT = -Wl,-rpath,
RLD_LOCI_LIB_PATH = $(RLD_PATH_OPT)$(LOCI_BASE)/lib
RLD_OPT_SEPARATOR = ,-rpath,

SHARED_LD = $(CPP) -shared 
SHARED_LD_FLAGS = -o #This should end in -o since it's used immediately before the name of the output file.  Also, this was missing in CC_sgi.conf, that's why SGI builds with shared libraries was failing.
PIC_FLAGS = -KPIC
CC_PIC_FLAGS = -KPIC

AR        = $(CPP) $(CC_LIB_FLAGS) -J 6 
ARFLAGS   = -ar -o
RANLIB    = echo ranlib


PIC_FLAGS = -KPIC
SHARED_LD = $(CPP) -shared
SHARED_LD_FLAGS = -o
