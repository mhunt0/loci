# C++ Compiler
CPP = mpic++
# C Compiler
CC  = mpicc

# Dependency Compiler
MAKEDEPEND = $(CPP) -M

# Turn ON/Off extra debugging error checking (usually off for optimized code)
# Also turn on array bounds checking (really slows things down)
# -DENTITY turns on type distinction between entity and integer.
ifeq ($(SYS_TYPE),Darwin)
WARNEXCEPT = -Wno-long-double
else
WARNEXCEPT = 
endif

DEBUG   = $(WARNEXCEPT) -Wall #-DDEBUG -DBOUNDS_CHECK 

SYSTEM_DEFINES = 


#Compiler option used to include debugging information
CC_DEBUG = #-g

ARCH_FLAGS_i686 =  -march=pentium3 -fno-math-errno #-ffast-math
ARCH_FLAGS_ppc = -fast  -fno-math-errno
ARCH_FLAGS_ia64 = -fomit-frame-pointer -ffast-math -fstrict-aliasing  -mb-step
ARCH_FLAGS_x86_64 = -march=opteron -ffast-math -ftree-vectorize -fstrict-aliasing -fomit-frame-pointer

#Compiler option used to perform maximum optimization
CC_OPTIMIZE = -O2 $(ARCH_FLAGS_$(ARCH_TYPE))
#Compiler Option for reasonable compile times of less performace critical modules.
CC_OPTIMIZE_LOWER = -O1 $(ARCH_FLAGS_$(ARCH_TYPE))
EXCEPTIONS = 
CC_OPT1   = $(EXCEPTIONS) $(CC_OPTIMIZE_LOWER)
CC_OPT    = $(EXCEPTIONS) $(CC_OPTIMIZE) 
CC_LIB_FLAGS = $(EXCEPTIONS)

LD       = $(CPP)
LDFLAGS  = -rdynamic

ifeq ($(SYS_TYPE),Darwin)
RPATH = -L
else
RPATH = -Wl,-rpath,
endif

AR        = ar
ARFLAGS   = crv
RANLIB    = ranlib

ifeq ($(SYS_TYPE),Darwin)
PIC_FLAGS =
#Loadable module link
SHARED_LD = g++ -bundle -flat_namespace -undefined suppress
SHARED_LD_FLAGS = -o 
#dynamic library link  (This still needs work)
DYNAMIC_LD = g++ -dynamiclib #-install_name path -compatibility_version x.x -current_version x.x.x
DYNAMIC_LD_FLAGS = -o 

else
PIC_FLAGS = -fPIC
SHARED_LD = g++ -shared
SHARED_LD_FLAGS = -o 
DYNAMIC_LD = g++ -shared
DYNAMIC_LD_FLAGS = -o 
endif
