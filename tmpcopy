#!/bin/bash
###############################################################################
#
# Copyright 2008, 2015, Mississippi State University
#
# This file is part of the Loci Framework.
#
# The Loci Framework is free software: you can redistribute it and/or modify
# it under the terms of the Lesser GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# The Loci Framework is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# Lesser GNU General Public License for more details.
#
# You should have received a copy of the Lesser GNU General Public License
# along with the Loci Framework.  If not, see <http://www.gnu.org/licenses>
#
###############################################################################

set -e
set -u

source=`pwd`
logname=${LOGNAME-user}
target=${LOCI_TARGET-/usr/tmp/$logname/}
subdir=Loci
LIB_POSTFIX="so"
COMP=${LOCI_COMP-gcc}

ARCH=${LOCI_ARCH-`uname -s`}
if [ $ARCH == "Darwin" ]; then
  LIB_POSTFIX="dylib"
fi

while [ $# -ne 0 ]; do
  case "$1" in
    --subdir)
        shift
        subdir=$1
        ;;
    --target)
        shift
        subdir=""
        target=$1
        ;;
    --source)
        shift
        source=$1
        ;;
    --compiler)
        shift
        COMP=$1
        ;;
    *)
      break
      ;;
  esac
  shift
done

if [ $# -eq 1 ]; then
  target=$1
fi
if [ $# -eq 2 ]; then
  target=$1
  COMP=$2
fi

if [ ${target:0:1} != "/" ]; then
   target=`pwd`/${target}
   echo setting target to \'$target\'
fi

SRC_DIRS="2dgv               \
          FVMAdapt           \
          FVMMod             \
          FVMOverset         \
          FVMtools           \
          FVMtools/libadf    \
          lpp                \
          sprng              \
          System             \
          Tools"

INCLUDE_DIRS="include            \
              include/2dgv       \
              include/Tools      \
              include/Config     \
              include/MPI_stubb  \
              include/FVMAdapt   \
              include/FVMMod     \
              include/FVMOverset \
              include/FVMtools   \
              include/libadf     \
              include/sprng"

TARGET_DIRS="targets             \
             targets/deps"

TUT_DIRS="Tutorial                            \
          Tutorial/1D-Diffusion               \
          Tutorial/Datatypes                  \
          Tutorial/docs                       \
          Tutorial/docs/figures               \
          Tutorial/heat                       \
          Tutorial/lfvm                       \
          Tutorial/life                       \
          Tutorial/LociTutorialSlides         \
          Tutorial/LociTutorialSlides/Figures"

TEST_DIRS="quickTest             \
           quickTest/Containers  \
           quickTest/FVM         \
           quickTest/FVM/include \
           quickTest/FVM/tests   "


echo -n "Making Directory Structure: "
mkdir -p $target

if [ "$subdir" == "" ]; then
    fulltarget=$target
else
    fulltarget=$target/$subdir
    mkdir -p $fulltarget
fi

mkdir -p $fulltarget/lib
mkdir -p $fulltarget/bin


for i in $SRC_DIRS ; do
  echo -n $i " "
  mkdir -p $fulltarget/$i
done
echo

for i in $INCLUDE_DIRS ; do
  echo -n $i " "
  mkdir -p $fulltarget/$i
done
echo

for i in $TARGET_DIRS ; do
  echo -n $i " "
  mkdir -p $fulltarget/$i
done
echo

for i in $TUT_DIRS ; do
  echo -n $i " "
  mkdir -p $fulltarget/$i
done
echo

for i in $TEST_DIRS ; do
  echo -n $i " "
  mkdir -p $fulltarget/$i
done
echo

if [ ! -h $fulltarget/FVMtools/extract_movie ]; then
    cp src/FVMtools/extract_movie $fulltarget/FVMtools/extract_movie
    chmod a+rx $fulltarget/FVMtools/extract_movie
fi

cd $fulltarget
if [ ! -h Makefile ]; then
  echo ln -s $source/src/Makefile Makefile
  ln -s $source/src/Makefile Makefile
fi
if [ ! -h Loci.conf ]; then
  echo ln -s $source/conf/Loci.conf Loci.conf
  ln -s $source/conf/Loci.conf Loci.conf
fi
if [ ! -h Install.bash ]; then
  echo ln -s $source/src/Install.bash Install.bash
  ln -s $source/src/Install.bash Install.bash
fi

if [ ! -e comp.conf ]; then
  echo cp $source/conf/${COMP}.conf comp.conf
  cp $source/conf/${COMP}.conf comp.conf
fi
if [ ! -e sys.conf ]; then
  if [ -e $source/conf/${ARCH}.conf ]; then
    echo cp $source/conf/${ARCH}.conf sys.conf
    cp $source/conf/${ARCH}.conf sys.conf
  fi
fi

if [ ! -e ext ]; then
  echo ln -s $source/ext ext
  ln -s $source/ext $fulltarget/ext
fi
for dir in $SRC_DIRS; do
  echo "Linking" $dir "directory files..."
  cd $source/src/$dir
  for i in *.cpp *.c *.loci Makefile; do
    if [ -e  $i ] ; then
      if [ ! -h $fulltarget/$dir/$i ] ; then
        echo ln -s $source/src/$dir/$i $fulltarget/$dir/$i
        ln -s $source/src/$dir/$i $fulltarget/$dir/$i
      fi
    fi
  done
done

for dir in $INCLUDE_DIRS; do
  echo "Linking" $dir "directory files..."
  cd $source/$dir
  for i in *.h *.hh *.hpp *.lh Loci; do
    if [ -f  $i ] ; then
      if [ ! -h $fulltarget/$dir/$i ] ; then
        echo ln -s $source/$dir/$i $fulltarget/$dir/$i
        ln -s $source/$dir/$i $fulltarget/$dir/$i
      fi
    fi
  done
done

for dir in $TARGET_DIRS; do
  echo "Linking" $dir "directory files..."
  cd $source/$dir
  for i in Makefile *.mk *.sh; do
    if [ -f  $i ] ; then
      if [ ! -h $fulltarget/$dir/$i ] ; then
        echo ln -s $source/$dir/$i $fulltarget/$dir/$i
        ln -s $source/$dir/$i $fulltarget/$dir/$i
      fi
    fi
  done
done

for dir in $TUT_DIRS; do
  echo "Linking" $dir "directory files..."
  cd $source/$dir
  for i in *.cpp *.h *.hh *.hpp *.c *.loci *.lh *.vars *.vog Makefile *.mk \
           *.sh *.tex *.pdf *.obj *.eps clean; do
    if [ -f  $i ] ; then
      if [ ! -h $fulltarget/$dir/$i ] ; then
        echo ln -s $source/$dir/$i $fulltarget/$dir/$i
        ln -s $source/$dir/$i $fulltarget/$dir/$i
      fi
    fi
  done
done

for dir in $TEST_DIRS; do
  echo "Linking" $dir "directory files..."
  cd $source/$dir
  for i in *.cpp *.h *.hh *.hpp *.c *.loci *.lh *.vars *.vog Makefile *.mk \
           *.sh *.tex *.pdf *.obj *.eps clean *.txt *.dat *.conf; do
    if [ -f  $i ] ; then
      if [ ! -h $fulltarget/$dir/$i ] ; then
        echo ln -s $source/$dir/$i $fulltarget/$dir/$i
        ln -s $source/$dir/$i $fulltarget/$dir/$i
      fi
    fi
  done
done
