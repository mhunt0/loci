################################################################################
# C++ Compiler
################################################################################
ifeq ($(MPI_CXX_COMPILER),none)
	CXX	=	g++
else
	CXX	=	$(MPI_CXX_COMPILER)
endif

################################################################################
# C Compiler
################################################################################
ifeq ($(MPI_C_COMPILER),none)
	CC	=	gcc
else
	CC	=	$(MPI_C_COMPILER)
endif

################################################################################
# Fortran90 compiler
################################################################################
ifeq ($(MPI_FC_COMPILER),none)
	FC	=	gfortran
else
	FC	=	$(MPI_FC_COMPILER)
endif

AR			=	ar
ARFLAGS		=	crv
RANLIB		=	ranlib
LDBSL		=	g++
# Dependency Compiler
MAKEDEPEND	=	$(CXX) -M


# Compiler option used to include debugging information
ARCH_FLAGS			=	-fno-math-errno     \
						-fno-trapping-math  \
						-ffinite-math-only  \
						-fstrict-aliasing   \
						-fomit-frame-pointer

ARCH_FLAGS_i686		=	$(ARCH_FLAGS)        \
						-march=pentium3      \
						-fno-signaling-nans

ARCH_FLAGS_ppc		=	$(ARCH_FLAGS)        \
						-fast                \
						-fno-signaling-nans

ARCH_FLAGS_ia64		=	$(ARCH_FLAGS)        \
						-fno-signaling-nans  \
						-mb-step

ARCH_FLAGS_x86_64	=	$(ARCH_FLAGS)       \
						-fno-signaling-nans

PIC_FLAGS			=	-fPIC
LD					=	$(CXX)
SHARED_LD			=	$(LD)
DYNAMIC_LD			=	$(LD)
RPATH				=	-Wl,-rpath,


ifeq ($(SYS_TYPE), Darwin)
	ARCH_FLAGS_x86_64	=	$(ARCH_FLAGS)
	PIC_FLAGS			=
	SHARED_LD_FLAGS		+=	-bundle -flat_namespace -o
	DYNAMIC_LD_FLAGS	+=	-dynamiclib -Wl,-undefined,dynamic_lookup -o
else
	SHARED_LD_FLAGS		+=	-shared -o
	DYNAMIC_LD_FLAGS	+=	-shared -o
endif

################################################################################
# Optimization Flags
################################################################################
OPT0	=	-O0
OPT1	=	-O1
OPT2	=	-O2
OPT3	=	-O3

# Check for Debug Environment Variable
ifneq ($(LOCI_DEBUG),)
	DEBUG			=	-Wall \
						-g3   \
						-ggdb \
						-fno-eliminate-unused-debug-symbols
	DEBUG_DEFINES	=	-DDEBUG \
						-DBOUNDS_CHECK
ifeq ($(LOCI_DEBUG), 0)
	OPT3	=	$(OPT0)
else ifeq ($(LOCI_DEBUG), 1)
	OPT3	=	$(OPT1)
else ifeq ($(LOCI_DEBUG), 2)
	OPT3	=	$(OPT2)
endif
endif

F_OPT	=	$(OPT3)
C_OPT	=	$(OPT3) -w
CXX_OPT	=	$(OPT3) -std=c++11

LDFLAGS	=	$(CXX_OPT)

ifneq ($(SYS_TYPE), SunOS)
	LDFLAGS	+=	-rdynamic
else
	RPATH	=	-L
endif

