<?xml version='1.0' encoding='ISO-8859-1'?>
<main updated="false">
  
  <!--define variables here.
        Attribute 'element' specify data type, its values can be 'float', 
       'int', 'string','vector, 'dvector' 'novalue' or 'selection'.
       
       float is actually represented by double .
  
       vector is for a 3d vector such as velocity. consists of 3
       double values.
 
       dvector is dynamic vector, used for variables such as
       mixture. It consists of more than one doubles. 
       
       selection is for flags, it's a group of checkable widgets, 
       the item checked will appear in the output.
       
       novalue is for variables without a value, such as adiabatic
       
       if the variable has unit, specify it  as a string list separated by
       ','.
       
       Attribute 'title' is the label displayed on the interface.

       Attribute 'name' is the variable name appears in .var file.

       Other attributes such as "toolTip", "whatsThis" and "statusTip"
       can be specified to present information on the interface.
       -->


  <variables>
    <angle unit="deg,rad" element="float" />
    <density unit="kg/m/m/m,g/cm/cm/cm,lbm/in/in/in,lbm/ft/ft/ft,slugs/ft/ft/ft" element="float"/>
    <dissipation_rate  element="float" />
    <kinetic_energy unit="m/s/s"  element="float" />
   
    <pressure unit="atm,Pa,psi,lbf/in/in,lbf/ft/ft,slug/ft/ft" element="float" />
    <Mach_number element="float" />
    <mass_flow unit="kg/s,lbm/s" element="float" />
    <mass_flux unit="kg/m/m/s" element="float" />
    <mass_fraction  condition="Material==multi" title="mass fraction" name="mixture"
		    conditionSatisfied="false" element="dvector" />
    <name element="string" />
    <pressure unit="atm,Pa,psi,lbf/in/in,lbf/ft/ft,slug/ft/ft" element="float" />
    <speed unit="rpm,rps" element="float" />
    <temperature unit="K,C,F,R" element="float" />
    <time unit="s,m,h,ms,ns" element="float" />
    <vector element="vector" />
    <velocity unit="m/s,km/h,miles/hour,ft/s" element="vector" />
  </variables>

  <!-- specify groups of variables, each variable will be output
  independently, but they will show in one group box on the interface.-->
 
  <!-- for each group, the element can be 'all', '2of3', 'stack' or 'choice' -->
  
  <!-- all: all the children need to be specified, so children are not-->
  <!-- checkable -->
  
  <!-- '2of3': there are three checkable children, only two of them can be checked-->

  <!-- 'stack': the user can click one of the checkable children,-->
  <!--  the input interface for the checked child will be displayed. --> 

  <!-- 'choice': the user click on one of the radio button to select one value for a variable,-->
  <!-- each value is represented as a child element, if a child
  element has attribute 'editable', then one or more
  variables can be defined. --> 

  <!-- the attribute 'title' specifys what's displayed as the title of the -->
  <!--group box on the interface -->


  <!-- the children of a group specify what's in the group, it can be another group, or a
  variable.

  if a variable appears here without its attribute 'element' specified, the
  program will go to variables, find the variable, and merge its
  attributes here.-->

  <!-- same as variables,  attributes such as "toolTip", "whatsThis" and "statusTip"
       can be specified to present information of the group. -->
  
  <groups>
    <prhotGroup title="please check 2 out of 3" element="2of3">
      <pressure name="p"></pressure>
      <temperature name="T"></temperature>
      <density name="rho"></density>
    </prhotGroup>
    <prhot0Group title="please check 2 out of 3" element="2of3">
      <pressure name="p0"></pressure>
      <density name="rho0"></density>
      <temperature name="T0"></temperature>
    </prhot0Group>
    <prhotwallGroup title="please check 2 out of 3" element="2of3">
      <pressure name="pwall"></pressure>
      <density name="rhowall"></density>
      <temperature name="Twall"></temperature>
    </prhotwallGroup>
    <swirlGroup   element="all" >
      <vector name="swirlAxis" title="swirl axis"></vector>
      <vector name="swirlCenter" title="swirl center"></vector>
      <angle name="swirlAngle" title="swirl angle"></angle>
    </swirlGroup>
    <rotGroup   element="all">
      <vector name="rotAxis"></vector>
      <vector name="rotCenter"></vector>
      <speed name="rotSpeed"></speed>
    </rotGroup>
    <swirlflowGroup title="swirlflow" element="stack" checked="0" >
      <swirlGroup title="fixed swirling flow angle" />
      <rotGroup  title="rigid body rotation"  />
      <normal element="novalue"/>
     
    </swirlflowGroup>
    <turbulenceGroup title="turbulence" element="stack" checked="0" >
      <swirlGroup title="fixed swirling flow angle"  />
      <rotGroup  title="rigid body rotation"  />
    </turbulenceGroup>
    <velocityGroup title="select one" element="stack" toolTip="i'm velocityGroup" >
      <velocity title="velocity" name="u" toolTip="I'm velocity" ></velocity>
      <Mach_number title="Mach Number" name="M" toolTip="I;m M"></Mach_number>
    </velocityGroup>
    <massGroup title="select one" element="stack" >
      <mass_flow title="mass flow" name="mdot"></mass_flow>
      <mass_flux title="mass flux" name="massFlux"></mass_flux>
    </massGroup>
    <twallGroup title="select one" element="stack" >
      <temperature title="temperature" name="Twall"></temperature>
      	<adiabatic title="adiabatic" element="novalue"/>
    </twallGroup>
  </groups>


  <!-- Define the editables here. editable are something that need to
       be defined when a choice is made in choice group. It can be one
       single variable,  a compound variable or a set of variables.
       
       For compound variables the
       element should be "panel", and the attributes 'prefix' should
       be specified. prefix is the symbold between variable name and variable value.
       
       The following attributes might be specified if the element is 'panel':
       
      
       postfix: the symbols that are appended after the text of last
       child. Default value: empty string. 

       infix:  the symbols that are inserted between the text of child
       elements. The default value is newline character.
       
       numColumn: the panels use  QGridLayout. By default, numColumn=1,
       i.e., all the children are aligned vertically. If numColumn >=
       number-of-children, the panel is aligned horizontally. otherwise,  1<
       numColumn< number-of-children, the panel has a grid layout. 
       
       feedback:  By default, the instant feedback feature is on. If
       feedback=`off', the feedback feature will be turned off. 
       
       if the variables or groups here have no attributes 'element'
       specified, the program will go to variables or
       groups, copy the chidlren and
       merge the attributes.  
    -->
  <editable>
    <Sland element="panel" prefix=": &lt;" postfix=">" >
      <a1 current="0" element="float" name="a1" />
      <a2 current="0" element="float" name="a2" />
      <a3 current="0" element="float" name="a3"/>
      <k1 current="0" element="float" name="k1"/>
      <k2 current="0" element="float" name="k2"/>
      <k3 current="0" element="float" name="k3"/>
      <pr current="0" element="float" name="pr"/>
     <usepr current="0" element="float" name="usepr"/>
    </Sland>
    
    <powerLawParam element="panel" prefix=": &lt;" postfix=">" >
      <mu_ref current="0" element="float" name="mu_ref"/>
      <T_ref current="0" element="float" name="T_ref"/>
      <power current="0" element="float" name="power"/>
      <Pr current="0" element="float" name="Pr"/>
    </powerLawParam>
    
    <const_viscosity element="panel"  prefix=": &lt;" postfix=">" >
      <mu current="0" element="float" />
      <kcond current="0" element="float" />
    </const_viscosity>
    
    <LaminarSchmidtNumber current="0" element="float" prefix=": " name="LaminarSchmidtNumber" />
    
    <rhod current="0"  prefix=": " element="float" />
    
    <kprod_clip current="0"  prefix=": " element="float" />
    
    <kprod_func current="0"  prefix=": " element="choice" >
      <total/>
      <vortivity/>
      <SOmega/>
    </kprod_func>
    
    <Kl current="1"  prefix=": " element="float" />
    
    <rotation element="panel" prefix="(" postfix=")" feedback="off">
      <axis element="vector"/>
      <center element="vector" />
      <speed element="float" />
    </rotation>
    
    <SST_Model_Settings element="panel" title="Model Settings">
      
      <kprod_func element="choice"  prefix=": " >
        <S0mega/>
        <total/>
        <vorticity/>
      </kprod_func>
      
      <Kprod_clip checked = "0" prefix = ": " element="float"  current="10" >
      </Kprod_clip>
      
      <compressibilityCorrection  prefix=": " element="choice" >
        <wilcox/>
        <sarkar/>
        <custom editable="Compressibility_Settings"/>
        <none/>
      </compressibilityCorrection>
      
      <multi_scale checked = "0" prefix=": "  element="choice" >
	<LES/>
	<LES2DX/>
	<LES2DY/>
	<LES2DZ/>
      </multi_scale>
      
      <crossDiffusionCorrection prefix=": " element="float"  current="10" checked="0">
      </crossDiffusionCorrection>

      <tmuu_clip prefix=": " element="float" current="1000000" checked="0"></tmuu_clip>
    
    </SST_Model_Settings>
    
    <Compressibility_Settings element="panel" title = "Compressibility Correction Settings">
      <wilcoxMto prefix=": " element="float" current="0.25" > </wilcoxMto>
      <sarkarAlpha1 prefix=": " element="float" current = "1.5" > </sarkarAlpha1>
    </Compressibility_Settings>
  
  </editable>


  
  <!-- Define all models here, unlike variables and groups, the models
	   should always be defind here. In the context where it's used, only
	   tagname need to be specified.
	-->
 

  
  <models>
    <!-- User defined models: the user can define the model by definig
	 the attributes and children, the element should be "all" for now  -->
    
    <ideal_gas title="ideal gas model"
	       element="all"
	       prefix=" //Model for Air as an ideal gas
species = {
_Air    = &lt;"
	       postfix = "href=0, sref=0, Tref=298.0, Pref=10000.0, mf=1.0 &gt;;
reactions = {
};">
      <m title="molecular mass" current="0" element="float" />
      <n title="linear component of e(T)" current="0" element="float" />
    </ideal_gas>
        
    <specified_gamma title="gamma model" 
		     element="all"
		     prefix=" //Fluid with Gamma specified
species = {
_Gamma"
	       postfix = "href=0, sref=0, Tref=298.0, Pref=1e5, mf=1.0 &gt;;
reactions = {
};" >
      <m title="molecular mass" current="0" element="float" />
      <gamma title="gamma" current="0" element="float" />
    </specified_gamma>
    
    <!-- harded coded user defined models: the attribute "element" describes what
	 need to be specified, possible values for 'element' are:
	 CPWindow, ChemistryMdl.  -->
    <fit_CP_polynomial title="fit_CP_polynomial model" 
		       element="CpWindow" prefix="href=55749, sref=130751, Tref=300, Pref=101325.0, mf=1, "  />
    <mixture_of_ideal_gases element="MixtureMdl"/>
    <chemically_reacting_model element="ChemistryMdl"/>
    
    <!-- User modified models: the user can modify the children and
	 attributes, the attribute "element" should be choice -->

    <thermodynamic_model element="choice" toolTips="select the type of thermodynamic model used" >
      <adaptive/>
      <vibrational_equilibrrium/>
      <curve_fit/>
    </thermodynamic_model>
    
    <transport_model element="choice" toolTips="select the type of transport model used" >
      <sutherland/>
      <powerLaw editable="powerLawParam" />
      <chemkin action="get file" />
      <const_viscosity editable="const_viscosity" />
    </transport_model>
    
    <diffusion_model condition="Material==multi"
		     conditionSatisfied="false"
		     element="choice"
		     toolTips="select the type of diffusion model used" >
      <laminarSchmidt editable="LaminarSchmidtNumber" />
      <chemkin action="get file" />
      <const_diffusivity editable="rhod" />
    </diffusion_model>
    
    <turbulence_model element="choice" toolTips="select the type of turbulence model used" >
      <SST editable="SST_Model_Settings" title="Model Settings" />
      <BSL editable="SST_Model_Settings" title="Model Settings" />
      <Wilcox98 editable="SST_Model_Settings" title="Model Settings" />
      <Wilcox08 editable="SST_Model_Settings" title="Model Settings" />
      <RKE/>
      <Spalart_Allmaras/>
    </turbulence_model>
    <!-- program updated models:For single_component_model and
	 multiple_components_model, the program will find and read files, and
	 update its children and attribute 'components', the element
	 should be "choice", other attributes can be modified by user-->
    <single_component_model element = "choice" name="chemistry_model" prefix=": ">
    </single_component_model>
    <multiple_components_model  element="choice"  name="chemistry_model"
				prefix=": "
				toolTips="describe the chemistry model to use" >
    </multiple_components_model>
  </models>


  <importPage  element="importWindow" label="please specify grid type"
	       title="import grid" whatsThis="whatsthis" status="done">
    <!-- attribute "dir" gives a list of directory to search for files, separated by -->
    <!-- ','.  The default value is the first.-->
    <directory dir="" />
    <!-- element "gridtypes" describle different kinds of file format,-->
    <!-- which is listed in its children elements. The attribute "element -->
    <!-- = stack" means when the user clicks on a file format, the -->
    <!-- corresponding page will be displayed-->
    <gridtypes element="stack" current="">
      <!-- for each file format, such as  xdr, cobalt, cfd, plot3d and-->
      <!--solidmesh, the attribute "nameFilter" is the name filter of the-->
      <!--files. And the attribute "label" is the description of the file that-->
      <!--will be displayed on the interface. The attribute "toXdr" and-->
      <!--"toVog" is the commands to be used for converting this type of grid.-->
      <!--"vogOption", if false, do not need the unit options -->
      <xdr  nameFilter="*.xdr" label="xdr file" toVog="xdr2vog" />
      <cobalt  nameFilter="*.cog" label="cobalt format" toVog="cobalt2vog" />
      <cfd toXdr="cfd++2xdr" nameFilter="nodesin.bin,cellsin.bin,exbcsin.bin" label="cfd++ format" toVog="xdr2vog" />
      <plot3d  nameFilter="*.grd" label="plot3d format" toVog="plot3d2vog" >
        <!-- the children elements of a grid type describe the "toXdr"-->
        <!-- command options. The tagName will appear in the command -->
        <!-- such as "plot3d2xdr -c str1 -bc str2 filename", -->
        <!-- the text node of the elements will be displayed with the -->
        <!-- checkbox. The attribute "value" describes the data type of the -->
        <!-- variables that the user need input, it can be float, int,-->
        <!-- string, vector, bool -->
        <c element="string" >Do you want to specify the boundary names to combine?</c>
        <bc element="string" >Do you want to provide a supplemental boundary
    specification file?</bc>
      </plot3d>
      <solidmesh nameFilter="*.ugrid" label="solid mesh"
      toVog="ugrid2vog" />
      <fluent  nameFilter="*.msh" label="fluent mesh"
      toVog="fluent2vog" />
      <ccm   nameFilter="*.ccm,*.ccmg" label="ccm mesh"
	  toVog="ccm2vog" vogOptions="false" />   
    </gridtypes>
    <!-- the element vogOptions specify the xdr2vog command options. It -->
    <!-- can specify a series of options such as "-o", "-v" and an unit(which -->
    <!-- is required). If the user selects "-Lref" as unit option, then the -->
    <!-- user need specify a float value and a unit.   -->
    <!-- For example,  "xdr2vog -o -v -in filename", "xdr2vog -Lref -->
    <!-- 5.4ft filename" -->
    <vogOptions>
      <!-- For each child element with the attribute value="bool", -->
      <!-- tagName of the element will appear in the command such as -->
      <!-- "-o", and the text node will be displayed with the -->
      <!-- checkbox. The user doesn't has to input any value. "bool" is -->
      <!-- the only value acceptable for the attribute "value" unless the tag -->
      <!-- name is unit, in that case, the attribute "value" should be "choice"-->
      <o element="bool" >disable optimization that reorders nodes and faces?</o>
      <v element="bool" >display loci version?</v>
      <!-- For the element "unit", tagName will not appear in the command, the -->
      <!-- text node if "unit" describes all possible units, separate by -->
      <!-- ',' . The unit the user selected will appear in the command -->
      <!-- line such as "-in".  -->
      <unit element="choice" >m,cm,in,ft,Lref</unit>
      <options>
        <Lref unit="m,cm,in,ft" prefix="" bottom="0.0" postfix="" element="float" />
      </options>
    </vogOptions>
    <usage>
      <solidmesh>
	ugrid2vog converter program:
	
	This program converts unstructured mesh files (with a
	'.ugrid' extension) into a VOG format file that is suitable
	for use with Loci programs.  To use this program enter:
	
	ugrid2vog &lt; units option &gt; &lt; -o &gt; &lt; casename &gt;
	
	where units option can be:
	
	-m : meters
	-cm : centemeters
	-mm : millimeters
	-in : inches
	-ft : feet
	-Lref "reference length" : user specified scaling factor
	
	The "-o" option, if provided, will disable node
	reordering optimizations.
	
	The &lt;casename&gt; is the base name without
	extension of the  solidmesh file.
      </solidmesh>
      

      <xdr>
	xdr2vog converter program:
	
	This program converts xdr mesh files (with a '.xdr'
	extension) into a VOG format file that is suitable for
	use with Loci programs.
       
	To use this program enter:
	
	xdr2vog &lt;units option&gt; &lt;-o&gt; &lt;casename&gt;
	
	where units option can be:
	
	-m : meters
	-cm : centemeters
	-mm : millimeters
	-in : inches
	-ft : feet
	-Lref "reference length" : user specified scaling factor
	
	The "-o" option, if provided, will disable node
	reordering optimizations.
	
	The &lt;casename&gt; is the base name without extension of
	the xdr mesh file.
      </xdr>
      <cobalt>
	cobalt2vog converter program:
	
	This program converts cobalt mesh files (with a '.grd'
	extension) into a VOG format file that is suitable for
	use with Loci programs.
	
	To use this program enter:
	
	cobalt2vog &lt;units option&gt; &lt;-o&gt; &lt;casename&gt;
	
	where units option can be:
	
	-m : meters
	-cm : centemeters
	-mm : millimeters
	-in : inches
	-ft : feet
	-Lref "reference length" : user specified scaling factor
	
	The "-o" option, if provided, will disable node
	reordering optimizations.
	
	The &lt;casename&gt; is the base name without extension of
	the  cobalt file.
      </cobalt>
      <cfd>
	cfd++ to VOG file converter usage:

	cfd++2vog &lt;units option&gt; &lt;-o&gt; 

	This converter reads in three files:'nodesin.bin',
	'cellsin.bin' and 'exbcsin.bin', and writes out file 'grid.vog'

	where units option can be:
	
	-m : meters
	-cm : centemeters
	-mm : millimeters
	-in : inches
	-ft : feet
	-Lref "reference length" : user specified scaling factor
	
	The "-o" option, if provided, will disable node
	reordering optimizations.
      </cfd>
 
      <plot3d>
	Plot3d to VOG file converter usage:
        
	This converter assumes that the grid file has a .grd
	postfix. If only a single argument is given, then this
	will be grid file sans the .grd postfix, this will convert
	the grid to VOG format grid file.  If the 
	input file has more than one block, then the point
	matching faces will be glued, and the remaining 
	faces will be tagged with a unique tag for each
	block and face. 
	
	If you want to control how tags are assigned to boundary
	faces, then you can do so by providing a supplemental
	boundary specification file with the flag -bc
	
	Example:  plot3d2vog -bc &lt;casename&gt;.bc 
	&lt;units option&gt; &lt;-o&gt; &lt;casename&gt;
	
	where units option can be:
	
	-m : meters
	-cm : centemeters
	-mm : millimeters
	-in : inches
	-ft : feet
	-Lref "reference length" : user specified scaling factor
	
	The "-o" option, if provided, will disable node
	reordering optimizations.
	
	The &lt;casename&gt; is the base name without extension of
	the plot3d mesh file.

	The boundary condition specification file is contains the
	following information: 

	[Number of boundary groups] 
	For each group: 
	[boundary tag] [number of segments] [boundary name]
	For each segment:
	[block number] [faceid] [index1 start] [index1 end]
	[index2 start] [index2 end]
	Where:
	[faceid] is one of six strings: [IJ1,IJN,JK1,JKN,IK1,IKN]
	indices are given in the order indicated by the faceid string
      </plot3d>
      
      <fluent>
	fluent2vog converter program:
	
	This program converts fluent mesh files (with a '.msh'
	extension) into a VOG format file that is suitable for
	use with Loci programs.
	
	To use this program enter:
	
	fluent2vog &lt;units option&gt; &lt;-o&gt; &lt;casename&gt;
	      
	where units option can be:
	
	-m : meters
	-cm : centemeters
	-mm : millimeters
	-in : inches
	-ft : feet
	-Lref "reference length" : user specified scaling factor
	
	The "-o" option, if provided, will disable node
	reordering optimizations.
	
	The &lt;casename&gt; is the base name without
	extension of the fluent mesh file.
	
	This converter is able to convert both 2-D and
	3-D meshes.  For 2-D meshes, the converter
	automatically extrudes the mesh once cell in
	the Z coordinate direction. Symbolic boundary
	names are extracted from the Fluent mesh file
	and used as symbolic boundary face names in the
	VOG file. Volume tagged cells are ignored.
	Periodic boundary maps, hanging nodes, and
	other features are ignored by the converter.
      </fluent>
      <ccm>
	ccm2vog converter program:

	This program converts ccm mesh files (with a '.ccm'
	or '.ccmg' extension) into a VOG format file that
	is suitable for use with Loci programs.
	
	To use this program enter:
	
	ccm2vog &lt;casename&gt;.ccm[g] [&lt;-o&gt; &lt;output&gt;.vog]
	
	To run this program, adf library need to be set up
	first. Advanced  Data Format (ADF) is
	a library of basic database management and I/O
	subroutines that implements a relatively simple
	hierarchical database. ccm is a loose specification 
	where data is stored in pieces, rather than in a 
	strict domain-subdomain hierarchy.
	</ccm>
    </usage>
    <buttons>
      <convert status="new" cmd="" dir="" filename=""/>
    </buttons>
  </importPage>
  
   <!-- The main window is defined here. For each child of
   mainWindow, the attribute 'element' should be specialized windows,
   panel or page, if not element specified, it will be hard coded
   actions. The following attribtes might be specified for chidren of mainWindow.

   buttonTitle: the text displayed in the flow bar. 

   title: the title of the user input panel

   inDock: if specified, when graphics viewer will show.

   status: current status of this step

   toolTip, whatsThis, statusTip: info displayed on the flow bar buttons -->

  <mainWindow>

    <gridSetup buttonTitle="Grid&#xa;Setup"
	       status="not set"
	       inDock="true"
	       whatsThis="read in grid file and set up the case"
	       toolTip="read in grid" />
    <!--physicsWindow define the physics state of the system.

	For all children of physicsWindow, the element should be
	"stateStack".
	
	For the children of stateStack, either no element, in which
	case it will only appear as a radio button on the
	interface. Or the element is 'models', then on
	interface, it's a radio button with a page in which the
	user can select a model or add new models, define
	editable, etc.
	
      -->
    <physicsPage buttonTitle="Physics&#xa;Setup" element="physicsWindow" 
		 title="set up physics conditions" whatsThis=" " status="new">
      <Temporal title="temporal" current="0" element="stateStack" >
	<steady title="steady state" />
	<unsteady title="unsteady" />
      </Temporal>
      <!-- The attribute 'components' indicates Material element will
	   affact element components -->
      <Material title="fluid material properties" current="0"
		components="" element="stateStack" >
	<!--if element is 'models', the programs will go to models to
	    find all the children, and all the
	    attributes for the children should be defined in models.

	    The attribute 'define' indicates  a list of models the
	    user is allowed to add, the user can select one from them. -->
	<single title="single component model" current="0"
		element="models"
		define="ideal_gas,specified_gamma,fit_CP_polynomial">
          <single_component_model/>
	</single>
	<multi title="multiple components model" current="0" element="models"
       	       define="mixture_of_ideal_gases,chemically_reacting_model" >
          <multiple_components_model/>
	</multi>
      </Material>
      <Regime title="Flow Regime" current="0" element="stateStack" >
	<inviscid title="inviscid"  />
	<laminar title="laminar" element="models" toolTip="i'm laminar">
          <transport_model  />
          <diffusion_model />
	</laminar>
	<turbulent title="turbulent" element="models" >
          <transport_model  />
          <diffusion_model  />
          <turbulence_model  />
	</turbulent>
      </Regime>
    </physicsPage>


    <solverPage buttonTitle="Solver&#xa;Setup" element="solverWindow"
		title="set up solver parameters"
		label="press one" whatsThis=" " status="new" >
      <timeStepControl element="panel" feedback="off" numColumn="2">
	<time_integration element="choice"
		defaultCondition="Temporal==steady" default="time_accurate" prefix=": " >
          <euler/>
          <time_accurate/>
	</time_integration>
	<dtmax unit="ms,ns,s" element="float" prefix=": "  current="1"  />
	<cflmax element="float"  prefix=": " current="1e6" />
	<urelax element="float"  prefix=": " current=".2" />
	<gauss_seidel_iter element="int" prefix=": "  bottom="1" current="5" />
	<newton_iter element="int" min="1" prefix=": "
		     defaultCondition="Temporal==steady" disable="true" default="1" current="4" />
	<restart_freq element="int" bottom="1" prefix=": " top="10000000" current="500"  />
	<restart_modulo element="int" bottom="0" prefix=": " top="10000000" current="0" />
	<stop_iter element="int" bottom="1" prefix=": " top="1000000" current="1000"/>
	<maximumRunTime unit="h,s,m" prefix=": " element="float"  checked="0" />
      </timeStepControl>
      <outputControl element="panel" feedback="off" numColumn="2">
	<print_freq element="int" bottom="1" prefix=": " top="10000000" current="10" />
	<plot_freq element="int" bottom="1" prefix=": " top="10000000"  current="100" />
	<plot_modulo element="int" bottom="0" prefix=": " top="10000000"  current="0" />
      </outputControl>
      <numerical element="panel" feedback="off" numColumn="2">
	<inviscidFlux element="choice" prefix=": " checked="0">
          <adaptive/>
          <roe/>
          <roeBTW/>
          <hlleBTW/>
          <llfBTW/>
	</inviscidFlux>
	<hlle_alpha  element="float"  checked="0" current="1.0" 
		     toolTip="Set this for high speed flow robustness" />
	<Minf element="float"  checked="0" current = "1.0"
              toolTip="Set this to mean Mach number for low speed flows"/>
	
	<limiter element="choice"  checked="1" prefix=": "
		 toolTip="Inviscid Flux Limiter: Venkatakrishnan is the default, none uses no limiting, zero uses first order inviscid fluxes." >
          <venkatakrishnan editable="Kl" toolTip="A robust limiter" />
          <barth toolTip="A strictly TVD limiter"/>
          <nodalBarth toolTip="A robust variant of the barth limiter" />
          <none/>
          <zero/>
	</limiter>
	
	<Tf unit="K" element="float" prefix=": " checked="0" condition="Material==multi" current="300"  />
	<interpolateMinStencilSize unit="m" prefix=": " checked="0" element="float" />
	
      </numerical>
      <referenceFrame element="panel" feedback="off" numColumn="1">
	<gravity element="panel" prefix=": &lt;" postfix=">"   checked="0" >
          <g unit="m/s/s,ft/s/s,in/s/s" element="vector" currentX="-9.8" currentY="0" currentZ="0" />
          <rhoref unit="kg/m/m/m,slug/ft/ft/ft" element="float"
		  current="0"
		  toolTip="fluid bulk density for computing boyancy forces" />
	</gravity>
	<coriolis element="panel" prefix=": &lt;" 
		  postfix=">" feedback="off"  checked="0" toolTip="Rotating reference frame (Coriolis Forces)" >
          <axis element="vector" currentX="1" currentY="0" currentZ="0" />
          <center element="vector" currentX="0" currentY="0" currentZ="0" />
          <speed unit="rpm,rps" element="float" current="0" />
	</coriolis>
      </referenceFrame>
      <gridMotion condition="Temporal==unsteady" element="panel" feedback="off" numColumn="1"
		  output="this is just a test" outputCondition="Temporal==steady">
	<rigidRotation element="panel" prefix=": &lt;" postfix=">"  checked="0" >
          <axis element="vector" currentX="1" currentY="0" currentZ="0" />
          <center element="vector" currentX="0" currentY="0" currentZ="0" />
          <speed unit="rpm,rps" element="float" current="0" />
	</rigidRotation>
	<componentMotion element="choice"  checked="0" >
          <rotation editable="rotation" />
          <prescribed/>
          <stationary/>
	</componentMotion>
      </gridMotion>
    </solverPage>
    
    <boundaryPage saveIndex="0" buttonTitle="Boundary&#xa;Setup"
		  whatsThis=" " inDock="true"
		  status="new" element="boundaryWindow"
		  title="set up boundary
			 conditions" 
		  label="Boundary type:" >
      <notset  element="panel" status="new"/>
      <inflow element="panel" feedback="off" prefix="(" postfix=")" 
	      toolTip="A non-reflecting inflow boundary, can be&#xa;   supersonic or subsonic inflow." >
	<prhotGroup/>
	<velocityGroup/>
	<mass_fraction checked="0"  name="mixture"></mass_fraction>
	<advanced element="panel" buttonTitle="advanced"
		  feedback="off" infix=", " >
          <swirlflowGroup />
	  <turbulenceGroup />
       </advanced>  
	<flags  element="selection" >
          <normal/>
	  <equilibrium/>
      </flags>
      </inflow>
      <supersonicInflow  element="panel" prefix="(" postfix=")" 
			 toolTip="Used for supersonic inflow conditions.
				  Can also be used as a Dirichlet boundary condition " >
	<prhotGroup  />
	<velocityGroup  />
	<mass_fraction checked="0"  name="mixture"></mass_fraction>
	<advanced element="panel" infix=", " buttonTitle="advanced" feedback="off">
          <swirlflowGroup/>
	  <turbulenceGroup/>
	</advanced>       
	<flags element="selection" >
          <normal/>
	  <equilibrium/>
       </flags>
        
      </supersonicInflow>
      <isentropicInflow   element="panel" prefix="(" postfix=")" 
			  toolTip="Used for subsonic inflow where total&#xa;    conditions are specified and held." >
	<pressure title="total pressure" name="P0"></pressure>
	<temperature title="total temperature" name="T0"></temperature>
	<mass_fraction checked="0"  name="mixture"></mass_fraction>
	
	<advanced element="panel" buttonTitle="advanced" infix=", " feedback="off">
          <swirlflowGroup/>
	<turbulenceGroup/>
	</advanced>  
	<flags  element="selection" >
          <normal/>
	</flags> 
      </isentropicInflow>
      <fixedMass   element="panel" prefix="(" postfix=")" 
		   toolTip="Used for subsonic inflow where the mass flow&#xa;     rate is prescribed." >
	<massGroup  />
	<temperature title="total temperature" name="T0"></temperature>
	
	<advanced element="panel" infix=", " buttonTitle="advanced" feedback="off">
          <swirlflowGroup/>
	<turbulenceGroup/>
	</advanced> 
	<flags  element="selection" >
          <normal/>
      </flags>  
      </fixedMass>
      <farfield   element="panel" prefix="(" postfix=")" toolTip="A non-reflecting inflow and outflow&#xa;    condition.  This is often used to specify the farfield boundary on&#xa;    an external flow problem " >
	<prhotGroup  />
	<velocityGroup  />
	<mass_fraction checked="0" name="mixture"></mass_fraction>
	
	<advanced element="panel" buttonTitle="advanced" infix=", "  feedback="off">
          <swirlflowGroup/>
	  <turbulenceGroup/>
	</advanced>  
	<flags element="selection" >
          <normal/>
	  <equilibrium/>
       </flags> 
      </farfield>
      <outflow  element="panel" prefix="(" postfix=")" toolTip="A pressure imposed subsonic outflow boundary." >
	<pressure name="p"></pressure>
      </outflow>
      <supersonicOutflow  element="panel" prefix="(" postfix=")" 
			  toolTip="Boundary for outflow boundaries&#xa;   where the flow is entirely supersonic." />
      <extrapolate  element="panel" prefix="(" postfix=")" 
		    toolTip="Used for supersonic outflows or outflows&#xa;   where zero normal gradients are expected." />
      <symmetry  element="panel" prefix="" postfix=""
		 toolTip="Used for symmetry planes in 2-D simulations" />
      <impermeable  element="panel" prefix="" postfix="" 
		    toolTip="A slip wall boundary condition.  This&#xa;   should only be used for structured grid." />
      <reflecting  element="panel" prefix="" postfix="" toolTip="A general purpose sliding wall boundary" />
     <!--suggest: seems viscousWall not complete-->
      <viscousWall  element="panel" prefix="(" postfix=")" toolTip="A non-slip viscous wall." >
	<twallGroup  />
	<vector checked="0" name="uwall"></vector>
      </viscousWall>
      <wallLaw  element="panel" prefix="(" postfix=")" 
		toolTip="A turbulent viscous wall where the law-of-the-wall model is implemented." >
	<twallGroup  />
	<vector checked="0" name="uwall"></vector>
    </wallLaw>
       <!-- suggest: use group for center, vector and angle-->
      <periodic  element="panel" prefix="(" postfix=")" toolTip=" ">
      <name name="name" prefix="=&quot;" postfix="&quot;"/>
      <translate name="translate" element="vector" checked="0"/>
      <center name="center" element="vector" checked="0"/>
      <vector name="vector" element="vector" checked="0"/>
      <angle name="rotate" checked="0"/>
      </periodic>
      <interface  element="panel" prefix="(" postfix=")" toolTip=" " />
    </boundaryPage>
    
    <initialPage buttonTitle="Initial Condition&#xa;Setup"
		 whatsThis=" " 
		 status="new" label=""
		 title ="set up initial condition" 
		 inDock="true" current="0" element="initialWindow" >
      <initialConditions current="" element="panel" prefix=": &lt;"
			 postfix=">"  whatsThis="set up initial conditions" >
	<mass_fraction checked="0" name="mixture"></mass_fraction>
	<prhotGroup  />
	<velocityGroup  />
	
	<kinetic_energy name="k" title="turbulence kinetic energy" checked="0" />
	<dissipation_rate name="w" title="specific dissipation rate" checked="0" />
	<flags element="selection">      
          <equilibrium />
	</flags> 
      </initialConditions>
      <interpolateInitialConditions current="" action="find file" 
				    nameFilter="put*"  whatsThis="specify a binary
								  initial&#xa; condition file." checked="0" />
      <initialConditionRegions current="" element="regionWindow"  prefix=": &lt;"
			       postfix=">" infix=",&#xa;" regionPrefix="regions = ["
			       regionPostfix="]" whatsThis="specify initial conditions with regions of
							    constant properties"> 
	
      
	<state current="" 
	       whatsThis="specify all initial condition states" >
	  <default current="" element="panel" prefix=" = state("
		   postfix=")" feedback="off"  whatsThis="set up an initial condition state" >
	    <mass_fraction checked="0" name="mixture"></mass_fraction>
	    <prhotGroup  />
	    <velocityGroup  />
	    
	    <kinetic_energy title="turbulence kinetic energy" name="k" checked="0" />
	    <dissipation_rate title="specific dissipation rate" name="w" checked="0" />
	    <flags element="selection">      
              <equilibrium />
	    </flags> 
	  </default>
	</state>
      </initialConditionRegions>
    </initialPage>
    <saveVar buttonTitle="Save&#xa;.vars" status="done"/>
  </mainWindow>
  
  <boundary_conditions />
  <components/>   
  <!-- This part is the output of program-->
  
  
  <help>
    <Import>
      Import: convert other grid formats such as xdr, plot3d, ccm,
      cobalt, fluent, cfd++ and solid mesh into volume grid format(VOG files).
    </Import>
    <FVMadapt>
      FVMadapt:  a solution adaptive mesh refinement package. The user
      is allowed to use a tag file to mark the nodes that need to
      refine; or to use an XML file to define a region inside which all cells
      will be refined.  

      The interface provides facilities to define a region in an
      intuitive way. It also allows the user to use both options to
      refine grids. 
           
    </FVMadapt>
    <VogMerge>
      VogMerge: merge more than one volume grids into one grid.
    </VogMerge>
     <VogCut>
      VogCut: extract a sphere region from  a grid.
    </VogCut>
    <PB>
      pb is a periodic boundary tool. It makes exactly the same 
      boundaries for the given grid. 
      
      Some preconditions must be met before using pb:
      1) The two specified boundaries must have same contours
      2) The boundary cannot have arbitrary complex topology,
      planes or simple curves are the best inputs
      3) Boundary faces must be convex
    </PB>
   

    <VogCheck>
      VogCheck: check the grid quality of VOG file.
    </VogCheck>
    <Var_File_Generation title = "Var File Generation">
      Var File Generation: generate a VAR file as the variable input
      file for fluid dynamics simulation.
    </Var_File_Generation>
    
    <Post-Processing>
     Post-Processing: visualize the grid and the simulation results
     using cutplanes, contours, colormapping,
     nodes with extreme scalar values, etc. 
    </Post-Processing>
  
  </help>
  
</main>
